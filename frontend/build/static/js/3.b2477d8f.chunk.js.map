{"version":3,"sources":["API/getCategoriesAPI.js","components/dashboard/DashboardNewProduct.js","API/updateProductAPI.js","img/pencil-edit-form.svg","components/dashboard/EditProductForm.js","hooks/useEditProductForm.js","components/dashboard/DashboardEditProduct.js"],"names":["getCategoryAPI","setAllCategories","a","GET","json","data","console","log","LinksWrapper","styled","div","withError","to","token","formData","id","setIsSuccessfullySend","setFormIsLoading","history","PUT","response","status","getCategoriesAPI","setTimeout","push","alert","updateProductAPI","EditIcone","Logo","UpdateNewProductForm","useStorage","productToEdit","categories","useForm","mode","register","handleSubmit","errors","formState","useHistory","useState","formIsLoading","_id","onSubmit","e","preventDefault","FormData","img","files","undefined","price","parseInt","append","name","category","size","description","target","state","checked","useEditProductForm","src","editIcone","alt","enctype","defaultValue","isNotRequired","active","LoaderSpinner","small","StyledSection","main"],"mappings":"mLAEe,SAAeA,EAA9B,kC,4CAAe,WAA8BC,GAA9B,iBAAAC,EAAA,+EAEYC,YAAI,mBAFhB,gBAEHC,EAFG,EAEHA,KACRH,EAAiBG,EAAKC,MAHX,gDAKXC,QAAQC,IAAR,MALW,0D,0KCKFC,EAAcC,IAAOC,IAAT,iGAkBVC,uBAZd,WACC,OACE,eAAC,gBAAD,WACM,cAACH,EAAD,UACG,cAAC,IAAD,CAAYI,GAAG,wBAAf,yBAGb,cAAC,IAAD,W,2MCjBA,6CAAAV,EAAA,6DACEW,EADF,EACEA,MACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,GACAC,EAJF,EAIEA,sBACAC,EALF,EAKEA,iBACAC,EANF,EAMEA,QACAjB,EAPF,EAOEA,iBAPF,kBAU+BkB,YAAI,iBAAD,OACXJ,GACjBD,EACAD,EACA,YAdN,mBAUYO,EAVZ,EAUYA,SAMRH,GAAiB,GAEO,MAApBG,EAASC,OAlBjB,kCAmBYC,YAAiBrB,GAnB7B,QAqBMe,GAAsB,GACtBO,YAAW,WAET,OADAP,GAAsB,GACfE,EAAQM,KAAK,2BACnB,KAzBT,WA4B4B,MAApBJ,EAASC,OA5BjB,0CA6BaI,MAAM,oCA7BnB,0DA+BInB,QAAQC,IAAR,MA/BJ,2D,sBAmCemB,M,2GCtCA,MAA0B,6C,OCSnCC,EAAYlB,YAAOmB,IAAPnB,CAAH,oDAKA,SAASoB,IAAwB,IAAD,ECNhC,WAA8B,IAAD,EAEsCC,cAAzEjB,EAFmC,EAEnCA,MAAMkB,EAF6B,EAE7BA,cAAcf,EAFe,EAEfA,sBAAsBf,EAFP,EAEOA,iBAAiB+B,EAFxB,EAEwBA,WAFxB,EAIqBC,YAAQ,CACvEC,KAAM,WADQC,EAJ4B,EAI5BA,SAAUC,EAJkB,EAIlBA,aAA2BC,EAJT,EAIJC,UAAaD,OAI5CnB,EAAUqB,cARyB,EAUDC,oBAAS,GAVR,mBAUnCC,EAVmC,KAUrBxB,EAVqB,KAaxCF,EAAIgB,EAAcW,IAkCtB,MAAO,CACLP,WACAC,eACAC,SACAM,SAjCD,SAAkBtC,EAAKuC,GAAI,IAAD,IAC3B3B,GAAiB,GACf2B,EAAEC,iBAED,IAAM/B,EAAW,IAAIgC,SAEpBC,GAAU,OAAJ1C,QAAI,IAAJA,GAAA,UAAAA,EAAM0C,WAAN,eAAWC,OAAX,OAAmB3C,QAAnB,IAAmBA,GAAnB,UAAmBA,EAAM0C,WAAzB,aAAmB,EAAWC,MAAM,QAAKC,EAC5CC,EAAOC,SAAS9C,EAAK6C,OAElBpC,EAASsC,OAAO,MAAML,GACxBjC,EAASsC,OAAO,OAAQ/C,EAAKgD,MAC7BvC,EAASsC,OAAO,WAAY/C,EAAKiD,UACjCxC,EAASsC,OAAO,OAAQ/C,EAAKkD,MAC7BzC,EAASsC,OAAO,cAAe/C,EAAKmD,aACpC1C,EAASsC,OAAO,QAASF,GACzBpC,EAASsC,OAAO,SAAUR,EAAEa,OAAOC,MAAMC,SAEjDjC,EAAiB,CACbb,QACAC,WACAC,KACJC,wBACAC,mBACAhB,mBACAiB,aAUAuB,gBACAV,gBACAC,cD7CI4B,GADG5B,EAFwC,EAExCA,WAAWG,EAF6B,EAE7BA,SAAUC,EAFmB,EAEnBA,aAAcC,EAFK,EAELA,OAAQM,EAFH,EAEGA,SAASZ,EAFZ,EAEYA,cAAcU,EAF1B,EAE0BA,cAGvE,OACE,cAAC,IAAD,UAEE,eAAC,IAAD,WACE,cAACd,EAAD,CAAWkC,IAAOC,EAAWC,IAAI,gBACjC,eAAC,IAAD,CAAUC,QAAQ,sBAAsBrB,SAAUP,EAAaO,GAA/D,UACK,eAAC,IAAD,4BAAmBZ,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAesB,QAI7C,cAAC,IAAD,CAAkBlB,SAAUA,EAAUE,OAAQA,EAAQ4B,aAAclC,EAAcsB,OAEpF,cAAC,IAAD,CAAkBlB,SAAUA,EAAUE,OAAQA,EAAQ4B,aAAclC,EAAcwB,OAElF,cAAC,IAAD,CAAmBpB,SAAUA,EAAUE,OAAQA,EAAQ4B,aAAclC,EAAcmB,QAEjF,cAAC,IAAD,CAAwBf,SAAUA,EAAUE,OAAQA,EAAQL,WAAYA,EAAYiC,aAAclC,EAAcuB,WAElH,cAAC,IAAD,CAA6BW,aAAclC,EAAcyB,YAAarB,SAAUA,EAAUE,OAAQA,IAI5F,cAAC,IAAD,CAAgBF,SAAUA,EAAUE,OAAQA,EAAQ6B,eAAa,IACvE,cAAC,IAAD,CAAcR,SAAoB,OAAb3B,QAAa,IAAbA,OAAA,EAAAA,EAAeoC,SAAS,YAEzC1B,GAAmB,cAAC2B,EAAA,EAAD,CAAeC,OAAK,IAEtC,cAAC,IAAD,Y,uBEzCQC,EAAgB7D,IAAO8D,KAAV,8FAiBV5D,uBAXa,WAC3B,OACG,eAAC2D,EAAD,WACI,cAAC,eAAD,UACL,cAAC,IAAD,CAAY1D,GAAG,wBAAf,wBAEG,cAAC,EAAD","file":"static/js/3.b2477d8f.chunk.js","sourcesContent":["import { GET } from \"../utils/http\";\r\n\r\nexport default async function getCategoryAPI(setAllCategories) {\r\n  try {\r\n    const { json } = await GET(\"/api/categories\");\r\n    setAllCategories(json.data);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n","import styled  from 'styled-components'\r\nimport { withError } from './../withError'\r\nimport CreateNewProductForm from './CreateNewProductForm'\r\nimport {StyledSection} from './DashboardEditProduct'\r\nimport {GoBackLink} from '../product_details/ProductDetails'\r\n\r\n\r\nexport const LinksWrapper =styled.div`\r\ndisplay:flex;\r\nmargin:5px 0;\r\nmargin-left:15px;\r\nwidth:max-content;\r\n`;\r\n function DashboardNewProduct(){\r\n  return(\r\n    <StyledSection>\r\n          <LinksWrapper>\r\n             <GoBackLink to=\"/dashboard/myProducts\" >Regresar </GoBackLink>\r\n          </LinksWrapper>\r\n   \r\n<CreateNewProductForm/>\r\n    </StyledSection>\r\n\r\n  )\r\n}\r\nexport default withError(DashboardNewProduct)","import getCategoriesAPI from \"./getCategoriesAPI\";\r\nimport { PUT } from \"../utils/http\";\r\n\r\nasync function updateProductAPI({\r\n  token,\r\n  formData,\r\n  id,\r\n  setIsSuccessfullySend,\r\n  setFormIsLoading,\r\n  history,\r\n  setAllCategories,\r\n}) {\r\n  try {\r\n    const { response } = await PUT(\r\n      `/api/products/${id}`,\r\n      formData,\r\n      token,\r\n      \"formData\"\r\n    );\r\n    setFormIsLoading(false);\r\n\r\n    if (response.status === 200) {\r\n      await getCategoriesAPI(setAllCategories);\r\n\r\n      setIsSuccessfullySend(true);\r\n      setTimeout(() => {\r\n        setIsSuccessfullySend(false);\r\n        return history.push(\"/dashboard/myProducts\");\r\n      }, 2000);\r\n    }\r\n\r\n    if (response.status === 403)\r\n      return alert(\"Se require rol de Administrador\");\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport default updateProductAPI;\r\n","export default __webpack_public_path__ + \"static/media/pencil-edit-form.1d2432a8.svg\";","import styled  from 'styled-components'\r\nimport useEditProductForm from '../../hooks/useEditProductForm'\r\nimport {LoaderSpinner} from './../LoaderSpinner'\r\nimport {Logo} from '../auth/SingupForm'\r\nimport {ThisFormCard, ThisForm,ProductDescriptionTextArea,ProductSizeInput,ProductPriceInput,CategoriesOptionsInput,ProductNameInput,ImageUploader,FormButtons,  StyledSection,FormTitle,\r\nProductState,} from './CreateNewProductForm'\r\nimport editIcone from '../../img/pencil-edit-form.svg'\r\n\r\n\r\nconst EditIcone = styled(Logo)`\r\ntransform:scale(0.75);\r\n`\r\n\r\n\r\nexport default function UpdateNewProductForm() {\r\n\r\nconst {categories,register ,handleSubmit, errors, onSubmit,productToEdit,formIsLoading\r\n} = useEditProductForm()\r\n\r\n  return(\r\n    <StyledSection>\r\n\r\n      <ThisFormCard>\r\n        <EditIcone src = {editIcone} alt=\"new-product\"></EditIcone>\r\n        <ThisForm enctype=\"multipart/form-data\" onSubmit={handleSubmit(onSubmit)}>\r\n             <FormTitle>Editar {productToEdit?.name}</FormTitle>\r\n\r\n\r\n\r\n  <ProductNameInput register={register} errors={errors} defaultValue={productToEdit.name}/>\r\n\r\n<ProductSizeInput register={register} errors={errors} defaultValue={productToEdit.size} />\r\n\r\n<ProductPriceInput register={register} errors={errors} defaultValue={productToEdit.price} />\r\n\r\n  <CategoriesOptionsInput register={register} errors={errors} categories={categories} defaultValue={productToEdit.category}/>\r\n\r\n<ProductDescriptionTextArea  defaultValue={productToEdit.description} register={register} errors={errors}  />\r\n\r\n\r\n\r\n      <ImageUploader  register={register} errors={errors} isNotRequired />\r\n<ProductState state={productToEdit?.active ? \"checked\" : false } />\r\n\r\n   {formIsLoading  &&  <LoaderSpinner small /> }\r\n\r\n     <FormButtons/>\r\n\r\n\r\n        </ThisForm>\r\n      </ThisFormCard>\r\n    </StyledSection>\r\n  );\r\n}","import  updateProductAPI from '../API/updateProductAPI'\r\nimport {useForm} from 'react-hook-form'\r\nimport {useStorage} from '../context/useStorage'\r\nimport {  useState,useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function useEditProductForm(){\r\n\r\n  const {token,productToEdit,setIsSuccessfullySend,setAllCategories,categories} = useStorage()\r\n\r\n        const { register, handleSubmit, formState: { errors } }= useForm({\r\n  mode: \"onBlur\",\r\n});\r\n\r\n   const history = useHistory()\r\n\r\n  const [formIsLoading,setFormIsLoading] = useState(false);\r\n\r\n\r\nlet id= productToEdit._id\r\n\r\n\r\n\r\n\r\n function onSubmit(data,e) {\r\nsetFormIsLoading(true)\r\n  e.preventDefault()\r\n\r\n   const formData = new FormData()\r\n\r\nlet img = data?.img?.files ? data?.img?.files[0] : undefined;\r\nconst  price =parseInt(data.price)\r\n\r\n          formData.append('img',img )\r\n        formData.append('name', data.name)\r\n        formData.append('category', data.category)\r\n        formData.append('size', data.size)\r\n        formData.append('description', data.description)\r\n        formData.append('price', price)\r\n        formData.append('active', e.target.state.checked)\r\n\r\nupdateProductAPI({\r\n    token,\r\n    formData,\r\n    id,\r\nsetIsSuccessfullySend,\r\nsetFormIsLoading,\r\nsetAllCategories,\r\nhistory\r\n})\r\n\r\n  }\r\n\r\nreturn {\r\n  register ,\r\n  handleSubmit,\r\n  errors,\r\n  onSubmit,\r\nformIsLoading,\r\nproductToEdit,\r\ncategories,\r\n}\r\n\r\n}\r\n","import styled  from 'styled-components'\r\nimport { withError } from './../withError'\r\nimport EditProductForm from './EditProductForm'\r\nimport {GoBackLink} from '../product_details/ProductDetails'\r\nimport { LinksWrapper} from './DashboardNewProduct'\r\nexport const StyledSection = styled.main`\r\npadding-top: 60px ;\r\nmargin:0;\r\n min-height:100vh;\r\nwidth:100vw;\r\n`\r\nconst DashboardEditProduct = () =>{\r\n  return(\r\n     <StyledSection>\r\n         <LinksWrapper>\r\n    <GoBackLink to=\"/dashboard/myProducts\" >Regresar</GoBackLink>\r\n          </LinksWrapper>\r\n       <EditProductForm/>\r\n     </StyledSection>\r\n  );\r\n}\r\n\r\nexport default  withError(DashboardEditProduct)"],"sourceRoot":""}